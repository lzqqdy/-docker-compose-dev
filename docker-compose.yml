version: "3.3"
services:
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    ports:
      - "8000:8000"
      - "8888:9000"
      - "9443:9443"
    networks:
      - lzqqdy
  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: always
    environment:
      MYSQL_DATABASE: "test"
      MYSQL_ROOT_PASSWORD: "123456"
    ports:
      - "3306:3306"
    volumes:
      - /home/docker/mysql/conf:/etc/mysql/conf.d
      - /home/docker/mysql/data:/var/lib/mysql
  mysql8:
    image: mysql:8.0.29
    container_name: mysql8
    restart: always
    environment:
      MYSQL_DATABASE: "test"
      MYSQL_ROOT_PASSWORD: "123456"
    ports:
      - "3308:3306"
    volumes:
      - /home/docker/mysql8/conf:/etc/mysql/conf.d
      - /home/docker/mysql8/data:/var/lib/mysql
  redis:
    image: redis:6.2.6
    container_name: redis
    restart: always
    command: redis-server --requirepass 123456
    ports:
      - "6379:6379"
    volumes:
      - /home/docker/redis/conf:/usr/local/etc/redis
  elasticsearch:
    image: elasticsearch:7.17.5
    container_name: elasticsearch
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - /home/docker/elasticsearch/plugins:/usr/share/elasticsearch/plugins
      - /home/docker/elasticsearch/data:/usr/share/elasticsearch/data 
    networks:
      - lzqqdy
  kibana:
    image: kibana:7.17.5
    container_name: kibana
    environment:
      - I18N_LOCALE=zh-CN
    ports:
      - "5601:5601"
    links:
      - elasticsearch:elasticsearch
    depends_on:
      - elasticsearch
    networks:
      - lzqqdy  
  logstash:
    image: logstash:7.17.5
    container_name: logstash
    ports:
      - "4560:4560"
    privileged: true
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - /home/docker/elk/logstash/config/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      - elasticsearch
    links:
      - elasticsearch:elasticsearch
    networks:
      - lzqqdy
  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: 123456
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"
    networks:
      - lzqqdy
  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181/kafka
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://{$ip}:9092 #TODO 修改为服务器ip
    networks:
      - lzqqdy
  postgres:
    image: postgres:latest
    container_name: pgsql
    restart: always
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: 123456
    ports:
      - "5432:5432"
    volumes:
      - /home/docker/PostgreSQL/data:/var/lib/postgresql/data
    networks:
      - lzqqdy
volumes:
  portainer_data:
networks:
  lzqqdy:
    driver: bridge
